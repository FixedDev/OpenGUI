/**
 * Scaffolding file used to store all the setups needed to run
 * tests automatically generated by EvoSuite
 * Thu Dec 07 18:23:32 GMT 2017
 */

package pl.socketbyte.opengui;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;

@EvoSuiteClassExclude
public class ItemEnchantment_ESTest_scaffolding {

    private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone();
    @org.junit.Rule
    public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
    private org.evosuite.runtime.thread.ThreadStopper threadStopper = new org.evosuite.runtime.thread.ThreadStopper(org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


    @BeforeClass
    public static void initEvoSuiteFramework() {
        org.evosuite.runtime.RuntimeSettings.className = "pl.socketbyte.opengui.ItemEnchantment";
        org.evosuite.runtime.GuiSupport.initialize();
        org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100;
        org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000;
        org.evosuite.runtime.RuntimeSettings.mockSystemIn = true;
        org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED;
        org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT();
        org.evosuite.runtime.classhandling.JDKClassResetter.init();
        setSystemProperties();
        initializeClasses();
        org.evosuite.runtime.Runtime.getInstance().resetRuntime();
    }

    @AfterClass
    public static void clearEvoSuiteFramework() {
        Sandbox.resetDefaultSecurityManager();
        java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
    }

    public static void setSystemProperties() {

        java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
        java.lang.System.setProperty("file.encoding", "Cp1250");
        java.lang.System.setProperty("java.awt.headless", "true");
        java.lang.System.setProperty("user.country", "PL");
        java.lang.System.setProperty("user.language", "pl");
        java.lang.System.setProperty("user.timezone", "Europe/Belgrade");
    }

    private static void initializeClasses() {
        org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ItemEnchantment_ESTest_scaffolding.class.getClassLoader(),
                "org.bukkit.enchantments.EnchantmentTarget",
                "org.bukkit.enchantments.EnchantmentWrapper",
                "org.bukkit.enchantments.Enchantment",
                "pl.socketbyte.opengui.ItemEnchantment",
                "org.bukkit.configuration.serialization.ConfigurationSerializable",
                "org.bukkit.inventory.ItemStack"
        );
    }

    private static void resetClasses() {
        org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ItemEnchantment_ESTest_scaffolding.class.getClassLoader());

        org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
                "org.bukkit.enchantments.Enchantment",
                "org.bukkit.Bukkit",
                "org.bukkit.block.BlockFace",
                "org.bukkit.material.Hopper",
                "com.google.common.collect.ImmutableMap",
                "com.google.common.collect.ImmutableBiMapFauxverideShim",
                "com.google.common.collect.ImmutableBiMap",
                "com.google.common.collect.RegularImmutableBiMap",
                "com.google.common.collect.ImmutableCollection",
                "com.google.common.collect.ImmutableSet",
                "com.google.common.collect.ImmutableSet$Indexed",
                "com.google.common.collect.ObjectArrays",
                "com.google.common.collect.RegularImmutableSet",
                "com.google.common.collect.ImmutableList",
                "com.google.common.collect.RegularImmutableList",
                "com.google.common.collect.Iterators"
        );
    }

    @Before
    public void initTestCase() {
        threadStopper.storeCurrentThreads();
        threadStopper.startRecordingTime();
        org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler();
        org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode();
        setSystemProperties();
        org.evosuite.runtime.GuiSupport.setHeadless();
        org.evosuite.runtime.Runtime.getInstance().resetRuntime();
        org.evosuite.runtime.agent.InstrumentingAgent.activate();
    }

    @After
    public void doneWithTestCase() {
        threadStopper.killAndJoinClientThreads();
        org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks();
        org.evosuite.runtime.classhandling.JDKClassResetter.reset();
        resetClasses();
        org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode();
        org.evosuite.runtime.agent.InstrumentingAgent.deactivate();
        org.evosuite.runtime.GuiSupport.restoreHeadlessMode();
    }
}
