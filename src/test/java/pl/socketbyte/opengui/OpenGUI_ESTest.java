/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 07 18:22:58 GMT 2017
 */

package pl.socketbyte.opengui;

import org.bukkit.plugin.Plugin;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.util.Map;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class OpenGUI_ESTest extends OpenGUI_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        OpenGUI[] openGUIArray0 = OpenGUI.values();
        assertNotNull(openGUIArray0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        OpenGUI openGUI0 = OpenGUI.valueOf("INSTANCE");
        assertEquals(OpenGUI.INSTANCE, openGUI0);
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        OpenGUI openGUI0 = OpenGUI.INSTANCE;
        // Undeclared exception!
        try {
            openGUI0.register(null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.bukkit.Bukkit", e);
        }
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        OpenGUI openGUI0 = OpenGUI.INSTANCE;
        Map<Integer, GUIExtender> map0 = openGUI0.getGUIs();
        assertEquals(0, map0.size());
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        OpenGUI openGUI0 = OpenGUI.INSTANCE;
        Plugin plugin0 = openGUI0.getInstance();
        assertNull(plugin0);
    }

    @Test(timeout = 4000)
    public void test5() throws Throwable {
        OpenGUI openGUI0 = OpenGUI.INSTANCE;
        Map<Integer, GUIExtender> map0 = openGUI0.getGuiMap();
        assertEquals(0, map0.size());
    }

    @Test(timeout = 4000)
    public void test6() throws Throwable {
        OpenGUI openGUI0 = OpenGUI.INSTANCE;
        GUIExtender gUIExtender0 = openGUI0.getGUI((-16));
        assertNull(gUIExtender0);
    }
}
