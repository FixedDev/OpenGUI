/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 07 18:23:37 GMT 2017
 */

package pl.socketbyte.opengui;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.Test;
import org.junit.runner.RunWith;
import pl.socketbyte.opengui.event.ElementResponse;

import static org.evosuite.shaded.org.mockito.Mockito.doReturn;
import static org.evosuite.shaded.org.mockito.Mockito.mock;
import static org.junit.Assert.assertEquals;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class ItemPack_ESTest extends ItemPack_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        ItemPack itemPack0 = new ItemPack(0, null);
        itemPack0.setSlot(2750);
        int int0 = itemPack0.getSlot();
        assertEquals(2750, int0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        ItemPack itemPack0 = new ItemPack(0, null);
        itemPack0.setSlot((-3206));
        int int0 = itemPack0.getSlot();
        assertEquals((-3206), int0);
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        ElementResponse elementResponse0 = mock(ElementResponse.class, new ViolatedAssumptionAnswer());
        doReturn(null).when(elementResponse0).toString();
        ItemPack itemPack0 = new ItemPack(0, null, elementResponse0);
        itemPack0.getElementResponse();
        assertEquals(0, itemPack0.getSlot());
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        ItemPack itemPack0 = new ItemPack(0, null);
        int int0 = itemPack0.getSlot();
        assertEquals(0, int0);
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        ItemPack itemPack0 = new ItemPack(null);
        assertEquals(0, itemPack0.getSlot());
    }

    @Test(timeout = 4000)
    public void test5() throws Throwable {
        ItemPack itemPack0 = new ItemPack(0, null);
        itemPack0.setElementResponse(null);
        assertEquals(0, itemPack0.getSlot());
    }

    @Test(timeout = 4000)
    public void test6() throws Throwable {
        ItemPack itemPack0 = new ItemPack(0, null);
        itemPack0.getElementResponse();
        assertEquals(0, itemPack0.getSlot());
    }

    @Test(timeout = 4000)
    public void test7() throws Throwable {
        ItemPack itemPack0 = new ItemPack(0, null);
        itemPack0.getItemBuilder();
        assertEquals(0, itemPack0.getSlot());
    }

    @Test(timeout = 4000)
    public void test8() throws Throwable {
        ElementResponse elementResponse0 = mock(ElementResponse.class, new ViolatedAssumptionAnswer());
        ItemPack itemPack0 = new ItemPack(null, elementResponse0);
        assertEquals(0, itemPack0.getSlot());
    }

    @Test(timeout = 4000)
    public void test9() throws Throwable {
        ItemPack itemPack0 = new ItemPack(0, null);
        itemPack0.setItemBuilder(null);
        assertEquals(0, itemPack0.getSlot());
    }
}
