/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 07 18:23:32 GMT 2017
 */

package pl.socketbyte.opengui;

import org.bukkit.enchantments.Enchantment;
import org.bukkit.enchantments.EnchantmentWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class ItemEnchantment_ESTest extends ItemEnchantment_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = (EnchantmentWrapper) Enchantment.DIG_SPEED;
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, 0, false);
        boolean boolean0 = itemEnchantment0.isUnsafe();
        assertFalse(boolean0);
        assertEquals(0, itemEnchantment0.getLevel());
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = (EnchantmentWrapper) Enchantment.LURE;
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, 0);
        int int0 = itemEnchantment0.getLevel();
        assertEquals(0, int0);
        assertTrue(itemEnchantment0.isUnsafe());
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(null, 395);
        int int0 = itemEnchantment0.getLevel();
        assertTrue(itemEnchantment0.isUnsafe());
        assertEquals(395, int0);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(null, 395);
        itemEnchantment0.getEnchantment();
        assertTrue(itemEnchantment0.isUnsafe());
        assertEquals(395, itemEnchantment0.getLevel());
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = (EnchantmentWrapper) Enchantment.ARROW_DAMAGE;
        Enchantment.stopAcceptingRegistrations();
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, (-359), true);
        itemEnchantment0.getEnchantment();
        assertTrue(itemEnchantment0.isUnsafe());
        assertEquals((-359), itemEnchantment0.getLevel());
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = (EnchantmentWrapper) Enchantment.PROTECTION_ENVIRONMENTAL;
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, 1);
        itemEnchantment0.getEnchantment();
        assertTrue(itemEnchantment0.isUnsafe());
        assertEquals(1, itemEnchantment0.getLevel());
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = new EnchantmentWrapper((-88));
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, (-20));
        itemEnchantment0.getEnchantment();
        assertTrue(itemEnchantment0.isUnsafe());
        assertEquals((-20), itemEnchantment0.getLevel());
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = (EnchantmentWrapper) Enchantment.ARROW_DAMAGE;
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, (-359), true);
        itemEnchantment0.setEnchantment(enchantmentWrapper0);
        assertEquals((-359), itemEnchantment0.getLevel());
        assertTrue(itemEnchantment0.isUnsafe());
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = (EnchantmentWrapper) Enchantment.ARROW_DAMAGE;
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, (-359), true);
        boolean boolean0 = itemEnchantment0.isUnsafe();
        assertEquals((-359), itemEnchantment0.getLevel());
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(null, 395);
        itemEnchantment0.setLevel(395);
        assertEquals(395, itemEnchantment0.getLevel());
        assertTrue(itemEnchantment0.isUnsafe());
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = (EnchantmentWrapper) Enchantment.WATER_WORKER;
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, (-956), true);
        int int0 = itemEnchantment0.getLevel();
        assertEquals((-956), int0);
        assertTrue(itemEnchantment0.isUnsafe());
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        EnchantmentWrapper enchantmentWrapper0 = (EnchantmentWrapper) Enchantment.WATER_WORKER;
        ItemEnchantment itemEnchantment0 = new ItemEnchantment(enchantmentWrapper0, (-956), true);
        assertTrue(itemEnchantment0.isUnsafe());

        itemEnchantment0.setUnsafe(false);
        assertFalse(itemEnchantment0.isUnsafe());
    }
}
